import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by qmltyperegistrar.

Module {
    Component {
        file: "ChatListModel.hpp"
        name: "ChatListModel"
        accessSemantics: "reference"
        prototype: "QAbstractListModel"
        exports: ["ClientApp/ChatListModel 1.0"]
        exportMetaObjectRevisions: [256]
        Property {
            name: "count"
            type: "int"
            read: "count"
            notify: "count_changed"
            index: 0
            isReadonly: true
            isFinal: true
        }
        Signal { name: "count_changed" }
        Method {
            name: "at"
            type: "MessageInfo"
            isPointer: true
            Parameter { name: "index"; type: "int" }
        }
    }
    Component {
        file: "ClientManager.hpp"
        name: "ClientManager"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: ["ClientApp/ClientManager 1.0"]
        exportMetaObjectRevisions: [256]
        Signal {
            name: "load_contacts"
            Parameter { name: "contacts"; type: "QJsonArray" }
        }
        Signal {
            name: "load_groups"
            Parameter { name: "json_array"; type: "QJsonArray" }
        }
        Signal {
            name: "load_my_info"
            Parameter { name: "my_info"; type: "QJsonObject" }
        }
        Signal {
            name: "profile_image"
            Parameter { name: "image_url"; type: "QString" }
        }
        Signal {
            name: "group_profile_image"
            Parameter { name: "group_ID"; type: "int" }
            Parameter { name: "image_url"; type: "QString" }
        }
        Signal {
            name: "text_received"
            Parameter { name: "chatID"; type: "int" }
            Parameter { name: "sender_ID"; type: "int" }
            Parameter { name: "message"; type: "QString" }
            Parameter { name: "time"; type: "QString" }
        }
        Signal {
            name: "client_connected_disconnected"
            Parameter { name: "phone_number"; type: "int" }
            Parameter { name: "true_or_false"; type: "bool" }
        }
        Signal {
            name: "client_profile_image"
            Parameter { name: "phone_number"; type: "int" }
            Parameter { name: "image_url"; type: "QString" }
        }
        Signal {
            name: "group_ID"
            Parameter { name: "groupID"; type: "int" }
            Parameter { name: "group_name"; type: "QString" }
        }
        Signal {
            name: "group_text_received"
            Parameter { name: "groupID"; type: "int" }
            Parameter { name: "sender_ID"; type: "int" }
            Parameter { name: "sender_name"; type: "QString" }
            Parameter { name: "message"; type: "QString" }
            Parameter { name: "time"; type: "QString" }
        }
        Signal {
            name: "file_received"
            Parameter { name: "chatID"; type: "int" }
            Parameter { name: "sender_ID"; type: "int" }
            Parameter { name: "file_url"; type: "QString" }
            Parameter { name: "time"; type: "QString" }
        }
        Signal {
            name: "group_file_received"
            Parameter { name: "groupID"; type: "int" }
            Parameter { name: "sender_ID"; type: "int" }
            Parameter { name: "sender_name"; type: "QString" }
            Parameter { name: "file_url"; type: "QString" }
            Parameter { name: "time"; type: "QString" }
        }
        Signal {
            name: "audio_received"
            Parameter { name: "chatID"; type: "int" }
            Parameter { name: "sender_ID"; type: "int" }
            Parameter { name: "audio_url"; type: "QString" }
            Parameter { name: "time"; type: "QString" }
        }
        Signal {
            name: "group_audio_received"
            Parameter { name: "GroupID"; type: "int" }
            Parameter { name: "sender_ID"; type: "int" }
            Parameter { name: "sender_name"; type: "QString" }
            Parameter { name: "audio_url"; type: "QString" }
            Parameter { name: "time"; type: "QString" }
        }
        Signal {
            name: "is_typing_received"
            Parameter { name: "sender_ID"; type: "int" }
        }
        Signal {
            name: "group_is_typing_received"
            Parameter { name: "groupID"; type: "int" }
            Parameter { name: "sender_name"; type: "QString" }
        }
        Signal {
            name: "update_client_info"
            Parameter { name: "phone_number"; type: "int" }
            Parameter { name: "first_name"; type: "QString" }
            Parameter { name: "last_name"; type: "QString" }
        }
        Signal { name: "disconnected" }
        Signal {
            name: "question_answer"
            Parameter { name: "secret_question"; type: "QString" }
            Parameter { name: "secret_answer"; type: "QString" }
        }
        Signal {
            name: "status_message"
            Parameter { name: "message"; type: "QString" }
            Parameter { name: "true_or_false"; type: "bool" }
        }
        Signal {
            name: "pop_message_received"
            Parameter { name: "message"; type: "QString" }
        }
        Signal {
            name: "remove_group_member_received"
            Parameter { name: "groupID"; type: "int" }
            Parameter { name: "group_members"; type: "QJsonArray" }
        }
        Signal {
            name: "add_group_member_received"
            Parameter { name: "groupID"; type: "int" }
            Parameter { name: "new_group_members"; type: "QJsonArray" }
        }
        Signal {
            name: "removed_from_group"
            Parameter { name: "groupID"; type: "int" }
        }
        Signal {
            name: "delete_message_received"
            Parameter { name: "chatID"; type: "int" }
            Parameter { name: "full_time"; type: "QString" }
        }
        Signal {
            name: "delete_group_message_received"
            Parameter { name: "groupID"; type: "int" }
            Parameter { name: "full_time"; type: "QString" }
        }
        Signal {
            name: "socket_disconnected"
            Parameter { name: "true_or_false"; type: "bool" }
        }
        Method {
            name: "on_text_message_received"
            Parameter { name: "data"; type: "QString" }
        }
        Method { name: "on_disconnected" }
        Method {
            name: "sign_up"
            Parameter { name: "phone_number"; type: "int" }
            Parameter { name: "first_name"; type: "QString" }
            Parameter { name: "last_name"; type: "QString" }
            Parameter { name: "password"; type: "QString" }
            Parameter { name: "password_confirmation"; type: "QString" }
            Parameter { name: "secret_question"; type: "QString" }
            Parameter { name: "secret_answer"; type: "QString" }
        }
        Method {
            name: "login_request"
            Parameter { name: "phone_number"; type: "int" }
            Parameter { name: "password"; type: "QString" }
        }
        Method {
            name: "update_info"
            Parameter { name: "first_name"; type: "QString" }
            Parameter { name: "last_name"; type: "QString" }
            Parameter { name: "password"; type: "QString" }
        }
        Method {
            name: "update_password"
            Parameter { name: "phone_number"; type: "int" }
            Parameter { name: "password"; type: "QString" }
        }
        Method {
            name: "retrieve_question"
            Parameter { name: "phone_number"; type: "int" }
        }
        Method { name: "profile_image_deleted" }
        Method { name: "disconnect" }
        Method {
            name: "send_text"
            Parameter { name: "receiver"; type: "int" }
            Parameter { name: "message"; type: "QString" }
            Parameter { name: "chat_ID"; type: "int" }
        }
        Method {
            name: "send_group_text"
            Parameter { name: "groupID"; type: "int" }
            Parameter { name: "sender_name"; type: "QString" }
            Parameter { name: "message"; type: "QString" }
        }
        Method {
            name: "send_is_typing"
            Parameter { name: "phone_number"; type: "int" }
        }
        Method {
            name: "send_group_is_typing"
            Parameter { name: "groupID"; type: "int" }
            Parameter { name: "sender_name"; type: "QString" }
        }
        Method {
            name: "delete_message"
            Parameter { name: "phone_number"; type: "int" }
            Parameter { name: "chat_ID"; type: "int" }
            Parameter { name: "full_time"; type: "QString" }
        }
        Method { name: "delete_account" }
        Method {
            name: "delete_group_message"
            Parameter { name: "groupID"; type: "int" }
            Parameter { name: "full_time"; type: "QString" }
        }
    }
    Component {
        file: "ContactInfo.hpp"
        name: "ContactInfo"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: ["ClientApp/ContactInfo 1.0"]
        exportMetaObjectRevisions: [256]
        Property {
            name: "first_name"
            type: "QString"
            read: "first_name"
            write: "set_first_name"
            notify: "first_name_changed"
            index: 0
        }
        Property {
            name: "chat_ID"
            type: "int"
            read: "chat_ID"
            write: "set_chat_ID"
            notify: "chat_ID_changed"
            index: 1
        }
        Property {
            name: "last_name"
            type: "QString"
            read: "last_name"
            write: "set_last_name"
            notify: "last_name_changed"
            index: 2
        }
        Property {
            name: "phone_number"
            type: "int"
            read: "phone_number"
            write: "set_phone_number"
            notify: "phone_number_changed"
            index: 3
        }
        Property {
            name: "status"
            type: "bool"
            read: "status"
            write: "set_status"
            notify: "status_changed"
            index: 4
        }
        Property {
            name: "image_url"
            type: "QString"
            read: "image_url"
            write: "set_image_url"
            notify: "image_url_changed"
            index: 5
        }
        Property {
            name: "unread_message"
            type: "int"
            read: "unread_message"
            write: "set_unread_message"
            notify: "unread_message_changed"
            index: 6
        }
        Property {
            name: "is_typing"
            type: "QString"
            read: "is_typing"
            write: "set_is_typing"
            notify: "is_typing_changed"
            index: 7
        }
        Property {
            name: "message_time"
            type: "QString"
            read: "message_time"
            write: "set_message_time"
            notify: "message_time_changed"
            index: 8
        }
        Property {
            name: "last_message_time"
            type: "QString"
            read: "last_message_time"
            write: "set_last_message_time"
            notify: "last_message_time_changed"
            index: 9
        }
        Property {
            name: "secret_question"
            type: "QString"
            read: "secret_question"
            write: "set_secret_question"
            notify: "secret_question_changed"
            index: 10
        }
        Property {
            name: "secret_answer"
            type: "QString"
            read: "secret_answer"
            write: "set_secret_answer"
            notify: "secret_answer_changed"
            index: 11
        }
        Property {
            name: "popup_message"
            type: "QString"
            read: "popup_message"
            write: "set_popup_message"
            notify: "popup_message_changed"
            index: 12
        }
        Property {
            name: "login_status"
            type: "bool"
            read: "login_status"
            write: "set_login_status"
            notify: "login_status_changed"
            index: 13
        }
        Property {
            name: "messages"
            type: "ChatListModel"
            isPointer: true
            read: "messages"
            notify: "messages_changed"
            index: 14
            isReadonly: true
        }
        Signal { name: "first_name_changed" }
        Signal { name: "last_name_changed" }
        Signal { name: "phone_number_changed" }
        Signal { name: "status_changed" }
        Signal { name: "image_url_changed" }
        Signal { name: "unread_message_changed" }
        Signal { name: "chat_ID_changed" }
        Signal { name: "last_message_time_changed" }
        Signal { name: "message_time_changed" }
        Signal { name: "messages_changed" }
        Signal { name: "is_typing_changed" }
        Signal { name: "secret_question_changed" }
        Signal { name: "secret_answer_changed" }
        Signal { name: "popup_message_changed" }
        Signal { name: "login_status_changed" }
        Method {
            name: "set_image_url"
            Parameter { name: "new_image_url"; type: "QString" }
        }
    }
    Component {
        file: "ContactListModel.hpp"
        name: "ContactListModel"
        accessSemantics: "reference"
        prototype: "QAbstractListModel"
        exports: ["ClientApp/ContactListModel 1.0"]
        exportMetaObjectRevisions: [256]
        Property {
            name: "active_chat"
            type: "ContactInfo"
            isPointer: true
            read: "active_chat"
            write: "set_active_chat"
            notify: "active_chat_changed"
            index: 0
        }
        Property {
            name: "main_user"
            type: "ContactInfo"
            isPointer: true
            read: "main_user"
            notify: "main_user_changed"
            index: 1
            isReadonly: true
        }
        Property {
            name: "contact_proxy_list_chat"
            type: "ContactProxyList"
            isPointer: true
            read: "contact_proxy_list_chat"
            notify: "contact_proxy_list_chat_changed"
            index: 2
            isReadonly: true
        }
        Property {
            name: "contact_proxy_list"
            type: "ContactProxyList"
            isPointer: true
            read: "contact_proxy_list"
            notify: "contact_proxy_list_changed"
            index: 3
            isReadonly: true
        }
        Property {
            name: "contacts"
            type: "QList<ContactInfo*>"
            read: "contacts"
            notify: "contacts_changed"
            index: 4
            isReadonly: true
        }
        Property {
            name: "socket_disconnected"
            type: "bool"
            read: "socket_disconnected"
            notify: "socket_disconnected_changed"
            index: 5
            isReadonly: true
        }
        Signal { name: "contacts_changed" }
        Signal { name: "active_chat_changed" }
        Signal { name: "contact_proxy_list_chat_changed" }
        Signal { name: "contact_proxy_list_changed" }
        Signal { name: "main_user_changed" }
        Signal { name: "socket_disconnected_changed" }
        Method {
            name: "on_load_contacts"
            Parameter { name: "json_array"; type: "QJsonArray" }
        }
        Method {
            name: "on_load_my_info"
            Parameter { name: "my_info"; type: "QJsonObject" }
        }
        Method {
            name: "on_text_received"
            Parameter { name: "chatID"; type: "int" }
            Parameter { name: "sender_ID"; type: "int" }
            Parameter { name: "message"; type: "QString" }
            Parameter { name: "time"; type: "QString" }
        }
        Method {
            name: "on_client_connected_disconnected"
            Parameter { name: "phone_number"; type: "int" }
            Parameter { name: "true_or_false"; type: "bool" }
        }
        Method {
            name: "on_client_profile_image"
            Parameter { name: "phone_number"; type: "int" }
            Parameter { name: "image_url"; type: "QString" }
        }
        Method {
            name: "on_file_received"
            Parameter { name: "chatID"; type: "int" }
            Parameter { name: "sender_ID"; type: "int" }
            Parameter { name: "file_url"; type: "QString" }
            Parameter { name: "time"; type: "QString" }
        }
        Method {
            name: "on_audio_received"
            Parameter { name: "chatID"; type: "int" }
            Parameter { name: "sender_ID"; type: "int" }
            Parameter { name: "audio_url"; type: "QString" }
            Parameter { name: "time"; type: "QString" }
        }
        Method {
            name: "on_is_typing_received"
            Parameter { name: "phone_number"; type: "int" }
        }
        Method {
            name: "on_update_client_info"
            Parameter { name: "phone_number"; type: "int" }
            Parameter { name: "first_name"; type: "QString" }
            Parameter { name: "last_name"; type: "QString" }
        }
        Method {
            name: "on_delete_message_received"
            Parameter { name: "chatID"; type: "int" }
            Parameter { name: "full_time"; type: "QString" }
        }
        Method {
            name: "lookup_friend"
            Parameter { name: "phone_number"; type: "int" }
        }
        Method {
            name: "update_unread_message"
            Parameter { name: "chatID"; type: "int" }
        }
    }
    Component {
        file: "ContactProxyList.hpp"
        name: "ContactProxyList"
        accessSemantics: "reference"
        prototype: "QSortFilterProxyModel"
        exports: ["ClientApp/ContactProxyList 1.0"]
        exportMetaObjectRevisions: [256]
        Method {
            name: "get"
            type: "ContactInfo"
            isPointer: true
            Parameter { name: "index"; type: "int" }
        }
    }
    Component {
        file: "GroupChatListModel.hpp"
        name: "GroupChatListModel"
        accessSemantics: "reference"
        prototype: "QAbstractListModel"
        exports: ["ClientApp/GroupChatListModel 1.0"]
        exportMetaObjectRevisions: [256]
        Property {
            name: "count"
            type: "int"
            read: "count"
            notify: "count_changed"
            index: 0
            isReadonly: true
            isFinal: true
        }
        Signal { name: "count_changed" }
        Method {
            name: "at"
            type: "GroupMessageInfo"
            isPointer: true
            Parameter { name: "index"; type: "int" }
        }
    }
    Component {
        file: "GroupInfo.hpp"
        name: "GroupInfo"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: ["ClientApp/GroupInfo 1.0"]
        exportMetaObjectRevisions: [256]
        Property {
            name: "group_ID"
            type: "int"
            read: "group_ID"
            write: "set_group_ID"
            notify: "group_ID_changed"
            index: 0
        }
        Property {
            name: "group_name"
            type: "QString"
            read: "group_name"
            write: "set_group_name"
            notify: "group_name_changed"
            index: 1
        }
        Property {
            name: "group_admin"
            type: "int"
            read: "group_admin"
            write: "set_group_admin"
            notify: "group_admin_changed"
            index: 2
        }
        Property {
            name: "group_image_url"
            type: "QString"
            read: "group_image_url"
            write: "set_group_image_url"
            notify: "group_image_url_changed"
            index: 3
        }
        Property {
            name: "group_unread_message"
            type: "int"
            read: "group_unread_message"
            write: "set_group_unread_message"
            notify: "group_unread_message_changed"
            index: 4
        }
        Property {
            name: "group_is_typing"
            type: "QString"
            read: "group_is_typing"
            write: "set_group_is_typing"
            notify: "group_is_typing_changed"
            index: 5
        }
        Property {
            name: "message_time"
            type: "QString"
            read: "message_time"
            write: "set_message_time"
            notify: "message_time_changed"
            index: 6
        }
        Property {
            name: "last_message_time"
            type: "QString"
            read: "last_message_time"
            write: "set_last_message_time"
            notify: "last_message_time_changed"
            index: 7
        }
        Property {
            name: "group_members"
            type: "QList<ContactInfo*>"
            read: "group_members"
            notify: "group_members_changed"
            index: 8
            isReadonly: true
        }
        Property {
            name: "group_messages"
            type: "GroupChatListModel"
            isPointer: true
            read: "group_messages"
            notify: "group_messages_changed"
            index: 9
            isReadonly: true
        }
        Signal { name: "group_name_changed" }
        Signal { name: "group_members_changed" }
        Signal { name: "group_image_url_changed" }
        Signal { name: "group_unread_message_changed" }
        Signal { name: "group_ID_changed" }
        Signal { name: "group_admin_changed" }
        Signal { name: "last_message_time_changed" }
        Signal { name: "message_time_changed" }
        Signal { name: "group_messages_changed" }
        Signal { name: "group_is_typing_changed" }
    }
    Component {
        file: "GroupListModel.hpp"
        name: "GroupListModel"
        accessSemantics: "reference"
        prototype: "QAbstractListModel"
        exports: ["ClientApp/GroupListModel 1.0"]
        exportMetaObjectRevisions: [256]
        Property {
            name: "active_group_chat"
            type: "GroupInfo"
            isPointer: true
            read: "active_group_chat"
            write: "set_active_group_chat"
            notify: "active_group_chat_changed"
            index: 0
        }
        Property {
            name: "group_proxy_list"
            type: "GroupProxyList"
            isPointer: true
            read: "group_proxy_list"
            notify: "group_proxy_list_changed"
            index: 1
            isReadonly: true
        }
        Signal { name: "groups_changed" }
        Signal { name: "active_group_chat_changed" }
        Signal { name: "group_proxy_list_changed" }
        Signal { name: "main_user_changed" }
        Method {
            name: "on_load_groups"
            Parameter { name: "json_array"; type: "QJsonArray" }
        }
        Method {
            name: "on_group_text_received"
            Parameter { name: "groupID"; type: "int" }
            Parameter { name: "sender_ID"; type: "int" }
            Parameter { name: "sender_name"; type: "QString" }
            Parameter { name: "message"; type: "QString" }
            Parameter { name: "time"; type: "QString" }
        }
        Method {
            name: "on_group_profile_image"
            Parameter { name: "group_ID"; type: "int" }
            Parameter { name: "group_image_url"; type: "QString" }
        }
        Method {
            name: "on_group_file_received"
            Parameter { name: "groupID"; type: "int" }
            Parameter { name: "sender_ID"; type: "int" }
            Parameter { name: "sender_name"; type: "QString" }
            Parameter { name: "file_url"; type: "QString" }
            Parameter { name: "time"; type: "QString" }
        }
        Method {
            name: "on_group_is_typing_received"
            Parameter { name: "groupID"; type: "int" }
            Parameter { name: "sender_name"; type: "QString" }
        }
        Method {
            name: "on_remove_group_member_received"
            Parameter { name: "groupID"; type: "int" }
            Parameter { name: "group_members"; type: "QJsonArray" }
        }
        Method {
            name: "on_add_group_member_received"
            Parameter { name: "groupID"; type: "int" }
            Parameter { name: "new_group_members"; type: "QJsonArray" }
        }
        Method {
            name: "on_removed_from_group"
            Parameter { name: "groupID"; type: "int" }
        }
        Method {
            name: "on_delete_group_message_received"
            Parameter { name: "groupID"; type: "int" }
            Parameter { name: "full_time"; type: "QString" }
        }
        Method {
            name: "on_group_audio_received"
            Parameter { name: "groupID"; type: "int" }
            Parameter { name: "sender_ID"; type: "int" }
            Parameter { name: "sender_name"; type: "QString" }
            Parameter { name: "audio_url"; type: "QString" }
            Parameter { name: "time"; type: "QString" }
        }
        Method {
            name: "add_group"
            Parameter { name: "group_name"; type: "QString" }
            Parameter { name: "members"; type: "QList<ContactInfo*>" }
        }
        Method {
            name: "remove_group_member"
            Parameter { name: "members"; type: "QList<ContactInfo*>" }
        }
        Method {
            name: "add_group_member"
            Parameter { name: "phone_number"; type: "int" }
            Parameter { name: "members"; type: "QList<ContactInfo*>" }
        }
        Method {
            name: "update_group_unread_message"
            Parameter { name: "groupID"; type: "int" }
        }
    }
    Component {
        file: "GroupMessageInfo.hpp"
        name: "GroupMessageInfo"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: ["ClientApp/GroupMessageInfo 1.0"]
        exportMetaObjectRevisions: [256]
        Property { name: "text"; type: "QString"; read: "text"; index: 0; isReadonly: true; isConstant: true }
        Property {
            name: "audio_source"
            type: "QString"
            read: "audio_source"
            index: 1
            isReadonly: true
            isConstant: true
        }
        Property {
            name: "file_source"
            type: "QString"
            read: "file_source"
            index: 2
            isReadonly: true
            isConstant: true
        }
        Property { name: "time"; type: "QString"; read: "time"; index: 3; isReadonly: true; isConstant: true }
        Property {
            name: "sender_ID"
            type: "int"
            read: "sender_ID"
            index: 4
            isReadonly: true
            isConstant: true
        }
        Property {
            name: "sender_name"
            type: "QString"
            read: "sender_name"
            index: 5
            isReadonly: true
            isConstant: true
        }
    }
    Component {
        file: "GroupProxyList.hpp"
        name: "GroupProxyList"
        accessSemantics: "reference"
        prototype: "QSortFilterProxyModel"
        exports: ["ClientApp/GroupProxyList 1.0"]
        exportMetaObjectRevisions: [256]
        Method {
            name: "get"
            type: "GroupInfo"
            isPointer: true
            Parameter { name: "index"; type: "int" }
        }
    }
    Component {
        file: "MediaController.hpp"
        name: "MediaController"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: ["ClientApp/MediaController 1.0"]
        exportMetaObjectRevisions: [256]
        Property {
            name: "time_display"
            type: "QString"
            read: "time_display"
            write: "set_time_display"
            notify: "time_display_changed"
            index: 0
        }
        Signal { name: "time_display_changed" }
        Signal { name: "is_recording_changed" }
        Method {
            name: "set_time_display"
            Parameter { name: "new_time"; type: "QString" }
        }
        Method {
            name: "on_duration_changed"
            Parameter { name: "duration"; type: "qlonglong" }
        }
        Method { name: "start_recording" }
        Method { name: "stop_recording" }
        Method {
            name: "send_file"
            Parameter { name: "value"; type: "int" }
        }
        Method {
            name: "view_file"
            Parameter { name: "file_path"; type: "QString" }
        }
    }
    Component {
        file: "MessageInfo.hpp"
        name: "MessageInfo"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: ["ClientApp/MessageInfo 1.0"]
        exportMetaObjectRevisions: [256]
        Property { name: "text"; type: "QString"; read: "text"; index: 0; isReadonly: true; isConstant: true }
        Property {
            name: "audio_source"
            type: "QString"
            read: "audio_source"
            index: 1
            isReadonly: true
            isConstant: true
        }
        Property {
            name: "file_source"
            type: "QString"
            read: "file_source"
            index: 2
            isReadonly: true
            isConstant: true
        }
        Property { name: "time"; type: "QString"; read: "time"; index: 3; isReadonly: true; isConstant: true }
        Property {
            name: "sender_ID"
            type: "int"
            read: "sender_ID"
            index: 4
            isReadonly: true
            isConstant: true
        }
    }
    Component {
        file: "qabstractproxymodel.h"
        name: "QAbstractProxyModel"
        accessSemantics: "reference"
        prototype: "QAbstractItemModel"
        Property {
            name: "sourceModel"
            type: "QAbstractItemModel"
            isPointer: true
            bindable: "bindableSourceModel"
            read: "sourceModel"
            write: "setSourceModel"
            notify: "sourceModelChanged"
            index: 0
        }
        Signal { name: "sourceModelChanged" }
        Method { name: "_q_sourceModelDestroyed" }
        Method {
            name: "_q_sourceModelRowsAboutToBeInserted"
            Parameter { type: "QModelIndex" }
            Parameter { type: "int" }
            Parameter { type: "int" }
        }
        Method {
            name: "_q_sourceModelRowsInserted"
            Parameter { type: "QModelIndex" }
            Parameter { type: "int" }
            Parameter { type: "int" }
        }
        Method {
            name: "_q_sourceModelRowsRemoved"
            Parameter { type: "QModelIndex" }
            Parameter { type: "int" }
            Parameter { type: "int" }
        }
        Method {
            name: "_q_sourceModelColumnsAboutToBeInserted"
            Parameter { type: "QModelIndex" }
            Parameter { type: "int" }
            Parameter { type: "int" }
        }
        Method {
            name: "_q_sourceModelColumnsInserted"
            Parameter { type: "QModelIndex" }
            Parameter { type: "int" }
            Parameter { type: "int" }
        }
        Method {
            name: "_q_sourceModelColumnsRemoved"
            Parameter { type: "QModelIndex" }
            Parameter { type: "int" }
            Parameter { type: "int" }
        }
        Method {
            name: "mapToSource"
            type: "QModelIndex"
            Parameter { name: "proxyIndex"; type: "QModelIndex" }
        }
        Method {
            name: "mapFromSource"
            type: "QModelIndex"
            Parameter { name: "sourceIndex"; type: "QModelIndex" }
        }
        Method {
            name: "mapSelectionToSource"
            type: "QItemSelection"
            Parameter { name: "selection"; type: "QItemSelection" }
        }
        Method {
            name: "mapSelectionFromSource"
            type: "QItemSelection"
            Parameter { name: "selection"; type: "QItemSelection" }
        }
    }
    Component {
        file: "qsortfilterproxymodel.h"
        name: "QSortFilterProxyModel"
        accessSemantics: "reference"
        prototype: "QAbstractProxyModel"
        Property {
            name: "filterRegularExpression"
            type: "QRegularExpression"
            bindable: "bindableFilterRegularExpression"
            read: "filterRegularExpression"
            write: "setFilterRegularExpression"
            index: 0
        }
        Property {
            name: "filterKeyColumn"
            type: "int"
            bindable: "bindableFilterKeyColumn"
            read: "filterKeyColumn"
            write: "setFilterKeyColumn"
            index: 1
        }
        Property {
            name: "dynamicSortFilter"
            type: "bool"
            bindable: "bindableDynamicSortFilter"
            read: "dynamicSortFilter"
            write: "setDynamicSortFilter"
            index: 2
        }
        Property {
            name: "filterCaseSensitivity"
            type: "Qt::CaseSensitivity"
            bindable: "bindableFilterCaseSensitivity"
            read: "filterCaseSensitivity"
            write: "setFilterCaseSensitivity"
            notify: "filterCaseSensitivityChanged"
            index: 3
        }
        Property {
            name: "sortCaseSensitivity"
            type: "Qt::CaseSensitivity"
            bindable: "bindableSortCaseSensitivity"
            read: "sortCaseSensitivity"
            write: "setSortCaseSensitivity"
            notify: "sortCaseSensitivityChanged"
            index: 4
        }
        Property {
            name: "isSortLocaleAware"
            type: "bool"
            bindable: "bindableIsSortLocaleAware"
            read: "isSortLocaleAware"
            write: "setSortLocaleAware"
            notify: "sortLocaleAwareChanged"
            index: 5
        }
        Property {
            name: "sortRole"
            type: "int"
            bindable: "bindableSortRole"
            read: "sortRole"
            write: "setSortRole"
            notify: "sortRoleChanged"
            index: 6
        }
        Property {
            name: "filterRole"
            type: "int"
            bindable: "bindableFilterRole"
            read: "filterRole"
            write: "setFilterRole"
            notify: "filterRoleChanged"
            index: 7
        }
        Property {
            name: "recursiveFilteringEnabled"
            type: "bool"
            bindable: "bindableRecursiveFilteringEnabled"
            read: "isRecursiveFilteringEnabled"
            write: "setRecursiveFilteringEnabled"
            notify: "recursiveFilteringEnabledChanged"
            index: 8
        }
        Property {
            name: "autoAcceptChildRows"
            type: "bool"
            bindable: "bindableAutoAcceptChildRows"
            read: "autoAcceptChildRows"
            write: "setAutoAcceptChildRows"
            notify: "autoAcceptChildRowsChanged"
            index: 9
        }
        Signal {
            name: "dynamicSortFilterChanged"
            Parameter { name: "dynamicSortFilter"; type: "bool" }
        }
        Signal {
            name: "filterCaseSensitivityChanged"
            Parameter { name: "filterCaseSensitivity"; type: "Qt::CaseSensitivity" }
        }
        Signal {
            name: "sortCaseSensitivityChanged"
            Parameter { name: "sortCaseSensitivity"; type: "Qt::CaseSensitivity" }
        }
        Signal {
            name: "sortLocaleAwareChanged"
            Parameter { name: "sortLocaleAware"; type: "bool" }
        }
        Signal {
            name: "sortRoleChanged"
            Parameter { name: "sortRole"; type: "int" }
        }
        Signal {
            name: "filterRoleChanged"
            Parameter { name: "filterRole"; type: "int" }
        }
        Signal {
            name: "recursiveFilteringEnabledChanged"
            Parameter { name: "recursiveFilteringEnabled"; type: "bool" }
        }
        Signal {
            name: "autoAcceptChildRowsChanged"
            Parameter { name: "autoAcceptChildRows"; type: "bool" }
        }
        Method {
            name: "setFilterRegularExpression"
            Parameter { name: "pattern"; type: "QString" }
        }
        Method {
            name: "setFilterRegularExpression"
            Parameter { name: "regularExpression"; type: "QRegularExpression" }
        }
        Method {
            name: "setFilterWildcard"
            Parameter { name: "pattern"; type: "QString" }
        }
        Method {
            name: "setFilterFixedString"
            Parameter { name: "pattern"; type: "QString" }
        }
        Method { name: "invalidate" }
    }
}
